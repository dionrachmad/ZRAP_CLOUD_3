managed implementation in class ZBP_R_RAP_ATRAV_002 unique;
strict ( 2 );
with draft;
define behavior for ZR_RAP_ATRAV_002 alias Travel
persistent table zrap_atrav_002
draft table zrap_atrav_002_d
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master ( global )
early numbering


{
  //  field ( mandatory : create )
  //   TravelId;

  field ( readonly )
  CreatedBy,
  CreatedAt,
  LocalLastChangedBy,
  LocalLastChangedAt,
  LastChangedAt;

  //  field ( readonly : update )
  field ( readonly )
  TravelId;

  field ( mandatory )
  CustomerId,
  BeginDate,
  EndDate;

  create;
  update ( features : instance );
  delete ( features : instance );

  determination setStatusToOpen on modify { create; }

  validation validateCustomer on save { create; field CustomerId; }
  validation validateDates on save { create; field BeginDate, EndDate; }

  //  action deductDiscount result [1] $self;
  action ( features : instance ) deductDiscount parameter /dmo/a_travel_discount result [1] $self;
  factory action copyTravel [1];

  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  draft action Activate optimized;
  draft action Discard;
  draft action ( features : instance ) Edit;
  draft action Resume;

  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateDates; }

  mapping for zrap_atrav_002
    {
      TravelId           = travel_id;
      AgencyId           = agency_id;
      CustomerId         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      Attachment         = attachment;
      MimeType           = mime_type;
      FileName           = file_name;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }
}